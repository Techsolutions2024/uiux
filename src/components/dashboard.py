import flet as ft
from components.ui_utils import create_card
from components.device_management import DeviceManagementPage
from components.live_monitoring import LiveMonitoringPage

class DashboardPage(ft.UserControl):
    def __init__(self, page, navigate_to):
        super().__init__()
        self.page = page
        self.navigate_to = navigate_to

    def navigate_to_module(self, e, module):
        self.page.controls.clear()
        if module == "device_management":
            self.page.add(DeviceManagementPage(self.page, self.navigate_to))
        elif module == "live_monitoring":
            self.page.add(LiveMonitoringPage(self.page, self.navigate_to))
        # TODO: Th√™m c√°c module kh√°c
        self.page.update()

    def build(self):
        return ft.Stack(
            [
                ft.Container(
                    gradient=ft.LinearGradient(
                        begin=ft.alignment.top_left,
                        end=ft.alignment.bottom_right,
                        colors=[ft.colors.BLUE_300, ft.colors.BLUE_700, ft.colors.WHITE],
                    ),
                    expand=True,
                ),
                ft.Column(
                    [
                        ft.Row(
                            [
                                ft.Text("H·ªá th·ªëng Qu·∫£n tr·ªã Camera", size=30, weight=ft.FontWeight.BOLD, color=ft.colors.WHITE),
                                ft.ElevatedButton("ƒêƒÉng xu·∫•t", on_click=lambda e: self.navigate_to(e, "login"), bgcolor=ft.colors.BLUE_700, color=ft.colors.WHITE),
                            ],
                            alignment=ft.MainAxisAlignment.SPACE_BETWEEN,
                            padding=20,
                        ),
                        ft.Container(
                            content=ft.Row(
                                [
                                    create_card("Qu·∫£n l√Ω Thi·∫øt b·ªã", "Qu·∫£n l√Ω camera, c·∫£m bi·∫øn", "üì∑", lambda e: self.navigate_to_module(e, "device_management")),
                                    create_card("Ph√¢n t√≠ch & S·ª± ki·ªán AI", "Nh·∫≠n di·ªán, c·∫£nh b√°o", "üß†", None),
                                    create_card("Qu·∫£n l√Ω Ng∆∞·ªùi d√πng", "Ph√¢n quy·ªÅn, log, 2FA", "üë§", None),
                                    create_card("Gi√°m s√°t Tr·ª±c ti·∫øp", "Live view, PTZ", "üì∫", lambda e: self.navigate_to_module(e, "live_monitoring")),
                                    create_card("L∆∞u tr·ªØ & Ph√°t l·∫°i", "Video, metadata", "üíæ", None),
                                    create_card("B·∫£o m·∫≠t & C√†i ƒë·∫∑t", "M√£ h√≥a, backup, audit", "üîí", None),
                                    create_card("B√°o c√°o & Ph√¢n t√≠ch", "Dashboard, d·ª± ƒëo√°n", "üìä", None),
                                    create_card("C·∫£nh b√°o & Th√¥ng b√°o", "Email, SMS, app", "üîî", None),
                                    create_card("T√≠ch h·ª£p & T√πy ch·ªânh", "ONVIF, RESTful, SDK", "üîå", None),
                                ],
                                wrap=True,
                                spacing=20,
                                run_spacing=20,
                            ),
                            padding=20,
                        ),
                    ],
                    expand=True,
                ),
            ],
            expand=True,
        )